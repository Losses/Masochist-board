@mainThemeColor: #3e00a4;
@darkerThemeColor: #342d40;
@darkestThemeColor: #2c184f;

@darkFontColor: #20113c;
@darkFontHoverColor: @mainThemeColor;
@mainFontColor: #3c324d;

@lightColor: #c0b5d3;
@lighterColor: #d7cceb;
@lightestColor: #ece8f5;

.flex-box(@direction: row, @wrap: nowrap) {
    display: flex;
    display: -webkit-flex;
    flex-flow: @direction @wrap;
    -webkit-flex-flow: @direction @wrap;
}

.flex(@grow: 1) {
    flex: @grow;
    -webkit-flex: @grow;
}

// Generate general transitions.
// For multiple properties, pass as `.transition(A, B, C;)`.
// Note the last semicolon must be presented,
// or LESS will treat `A`, `B`, `C` as separate parameters.
.transition(@property) {
    transition-property: @property;
    transition-duration: 300ms;
    transition-timing-function: ease-in-out;
}

.center(@width, @height) when (isnumber(@width)) and (isnumber(@height)) {
    @width-hength: unit(convert(@width, px), px);
    @height-hength: unit(convert(@height, px), px);

    position: fixed;
    top: 50%;
    left: 50%;
    width: @width-hength;
    height: @height-hength;
    margin-left: -(@width-hength / 2);
    margin-top: -(@height-hength / 2);
}

.card(@width, @height) when (isnumber(@width)) and (isnumber(@height)) {
    @width-hength: unit(convert(@width, px), px);
    @height-hength: unit(convert(@height, px), px);

    .center(@width, @height);
    .drop_shadow(2.5);
    .transition(margin-top, opacity;);
    margin-top: -(@height-hength / 2) + 30px;
    opacity: 0;
    visibility: collapse;
    background: white;
    border-radius: 3px;

    &.flow_up {
        margin-top: -(@height-hength / 2);
        opacity: 1;
        visibility: visible;
    }

    @media only screen and (max-width: 550px) {
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        margin-left: 0;
        margin-top: 30px;

        &.flow_up {
            margin-top: 0;
        }
    }
}

.padding-box(@padding: 0) {
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    padding: @padding;
}

.drop_shadow(@level: 1) {
    & when (@level = 1) {
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
    }

    & when (@level = 2) {
        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
    }

    & when (@level = 2.5) {
        box-shadow: 0 2px 10px 0 rgba(0, 0, 0, .16), 0 2px 5px 0 rgba(0, 0, 0, .26);
    }

    & when (@level = 3) {
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
    }

    & when (@level = 4) {
        box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
    }

    & when (@level = 5) {
        box-shadow: 0 19px 38px rgba(0, 0, 0, 0.30), 0 15px 12px rgba(0, 0, 0, 0.22);
    }
}

.color_sheet() {
    background: #3E00A4;

    &.orange {
        background: #ff9800;
    }

    &.deep_orange {
        background: #ff5722;
    }

    &.red {
        background: #f44336;
    }

    &.pink {
        background: #e91e63;
    }

    &.purple {
        background: #9c27b0;
    }

    &.deep_purple {
        background: #673ab7;
    }

    &.indigo {
        background: #3f51b5;
    }

    &.blue {
        background: #2196f3;
    }

    &.light_blue {
        background: #03a9f4;
    }

    &.cyan {
        background: #00bcd4;
    }

    &.teal {
        background: #009688;
    }

    &.green {
        background: #4caf50;
    }

    &.light_green {
        background: #8bc34a;
    }

    &.lime {
        color: @darkFontColor;
        background: #cddc39;
    }

    &.yellow {
        color: @darkFontColor;
        background: #ffeb3b;
    }

    &.blue_gray {
        background: #607d8b;
    }
}

.bump() {
    transition-timing-function: cubic-bezier(0.45, 1.36, 0.97, 1.17);
}
